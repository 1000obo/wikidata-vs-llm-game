<?PHP

error_reporting(E_ERROR|E_CORE_ERROR|E_ALL|E_COMPILE_ERROR);
ini_set('display_errors', 1);

header('Content-type: application/json');

$callback = $_REQUEST['callback'] ;
$out = array () ;

if ( $_REQUEST['action'] == 'desc' ) {

	$out = array (
		"label" => array ( "en" => "Famous People: LLM vs. Wikidata" ) ,
		"description" => array ( "en" => "This game will show a collection of 10 questions about famous people and you will have to select the most accurate answer between the response provided in the Wikidata and the response generated by a large language model (GPT-3.5-Turbo). Please, take your time and skip the question if you are not sure of the answer." ) ,
		"icon" => 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/Inkscape_vectorisation_test.svg/120px-Inkscape_vectorisation_test.svg.png'
	) ;

} else if ( $_REQUEST['action'] == 'tiles' ) {	

	// GET parameters
	$num = $_REQUEST['num'] ; // Number of games to return
	$lang = $_REQUEST['lang'] ; // The language to use, with 'en' as fallback; ignored in this game
	$random_number_array = range(1, 40);
	shuffle($random_number_array);
	$random_number_array = array_slice($random_number_array, 0, $num);

	$out['tiles'] = array();
	for ( $i = 0 ; $i < $num ; $i++ ) {
		$n = $random_number_array[$i];
		$g = array(
			'id' => rand(),
			'sections' => array () ,
			'controls' => array ()
		) ;
		// GET Tiles from Python
		$instruction = "python StudyApp/get_tile.py -c " . strval($n);
		$python_output = exec($instruction);

		$output_array = explode("@", $python_output);
		$len_output = count($output_array);
		
		$g['sections'][1] = array('type' => 'item' , 'q' => strval($output_array[0]));
		$g['sections'][0] = array('type' => 'text', 'title' => $output_array[1]);

		$accept_array = array(); // TODO: Connection with IDs
		$random_number_options = range(2, 3);
		shuffle($random_number_options);
		$accept_array[0] = array ( 'type' => 'white' , 'decision' => 'yes' , 'label' => $output_array[$random_number_options[0]]);
		$accept_array[1] = array ( 'type' => 'white' , 'decision' => 'yes' , 'label' => $output_array[$random_number_options[1]]);

		
		$g['controls'][] = array ( // TODO: Connection with API to edit
			'type' => 'buttons' ,
			'entries' => array_merge (
				$accept_array ,
				array(
					array ( 'type' => 'green' , 'decision' => 'yes' , 'label' => 'All previous options are correct' ),
					array ( 'type' => 'yellow' , 'decision' => 'no' , 'label' => 'No option is correct' ),
					array ( 'type' => 'blue' , 'decision' => 'skip' , 'label' => 'Skip/I don\'t know' )
				)
			)
		) ;
		$out['tiles'][$i] = $g;	

	}
	/*if ($i >= 10) {
		$out['status'] = 'No more tiles!';
	}
	*/
} else if ( $_REQUEST['action'] == 'log_action' ) {

	$out['status'] = 'Whatevaz, man' ;

} else {
	$out['error'] = "No valid action!" ;
}

print $callback . '(' ;
print json_encode ( $out ) ;
print ")\n" ;

?>
